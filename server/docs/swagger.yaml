basePath: /api
definitions:
  controllers.Auth:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Product:
    properties:
      active:
        type: boolean
      amount_available:
        type: integer
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      price_promotion:
        type: number
      promotion:
        type: boolean
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  title: API documentation
  version: 1.0.0
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Auth Data
        in: body
        name: Auth
        required: true
        schema:
          $ref: '#/definitions/controllers.Auth'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Login
      tags:
      - Users
  /logout:
    post:
      description: Logout
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Logout
      tags:
      - Users
  /products:
    get:
      description: Get all products
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: List products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create new Product based on body parameters
      parameters:
      - description: Product Data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Add a product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Delete a product
      tags:
      - Products
    get:
      description: Get product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get product
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Update an existing product based on ID and body parameters
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product Data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Update a product
      tags:
      - Products
  /user:
    get:
      description: Get logged user data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get user
      tags:
      - Users
swagger: "2.0"
